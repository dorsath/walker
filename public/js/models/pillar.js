// Generated by CoffeeScript 1.3.3
(function() {
  var Pillar;

  Pillar = (function() {

    function Pillar() {}

    Pillar.prototype.draw = function() {
      return this.drawPillar();
    };

    Pillar.prototype.buffer = function() {
      return this.bufferPillar();
    };

    Pillar.prototype.drawPillar = function() {
      gl.mvTranslate([3, 0, 0]);
      gl.bindBuffer(gl.ARRAY_BUFFER, this.pillarVerticesBuffer);
      gl.vertexAttribPointer(gl.vertexPositionAttribute, 3, gl.FLOAT, false, 0, 0);
      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.pillarVerticesIndexBuffer);
      gl.setMatrixUniforms();
      return gl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_SHORT, 0);
    };

    Pillar.prototype.bufferPillar = function() {
      var generatedColors, pillarVertexIndices, vertices;
      this.pillarVerticesBuffer = gl.createBuffer();
      gl.bindBuffer(gl.ARRAY_BUFFER, this.pillarVerticesBuffer);
      vertices = [-1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0];
      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);
      generatedColors = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1];
      this.pillarVerticesColorBuffer = gl.createBuffer();
      gl.bindBuffer(gl.ARRAY_BUFFER, this.pillarVerticesColorBuffer);
      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(generatedColors), gl.STATIC_DRAW);
      this.pillarVerticesIndexBuffer = gl.createBuffer();
      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.pillarVerticesIndexBuffer);
      pillarVertexIndices = [0, 3, 4, 4, 5, 3, 1, 2, 6, 6, 7, 1, 0, 1, 2, 2, 3, 0, 4, 5, 6, 6, 7, 4, 0, 1, 4, 7, 4, 1, 2, 3, 5, 5, 6, 2];
      return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(pillarVertexIndices), gl.STATIC_DRAW);
    };

    return Pillar;

  })();

  window.pillar = Pillar;

}).call(this);
